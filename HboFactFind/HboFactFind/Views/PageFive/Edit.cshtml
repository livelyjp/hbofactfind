@model HboFactFind.Domain.Pages.PageFive

@{
    ViewBag.Title = "Income";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
    <h3>Income</h3>
        @Html.Partial("_EditNavigationBar", new KeyValuePair<string, long>("Income", Model.Id))

    @Html.ValidationSummary(true, "", new {@class = "text-danger"})
    @Html.HiddenFor(model => model.Id)
    <div class="hboDetailRow row">
        <div class="col-xs-12">
            <div class="headerStyle col-xs-12 col-sm-4">
            </div>
            <div class="columnTitle col-xs-12 col-sm-8">
                <div class="col-xs-12 col-sm-6">
                    <strong>Client One</strong>
                </div>
                <div class="col-xs-12 col-sm-6">
                    <strong>Client Two</strong>
                </div>
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="hboDetailRow row">
            <div class="col-xs-12">
                <div class="headerStyle col-xs-12 col-sm-4">
                    @Html.LabelFor(model => model.ClientOneGrossEmploymentIncome)
                </div>
                <div class="fieldStyle col-xs-12 col-sm-8">
                    <div class="topTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientOneGrossEmploymentIncome, new {htmlAttributes = new {@class = "form-control clientOne"}})
                        @Html.ValidationMessageFor(model => model.ClientOneGrossEmploymentIncome, "", new {@class = "text-danger"})
                    </div>
                    <div class="bottomTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientTwoGrossEmploymentIncome, new { htmlAttributes = new { @class = "form-control clientTwo" } })
                        @Html.ValidationMessageFor(model => model.ClientTwoGrossEmploymentIncome, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="hboDetailRow row">
            <div class="col-xs-12">
                <div class="headerStyle col-xs-12 col-sm-4">
                    @Html.LabelFor(model => model.ClientOneGrossSelfEmploymentIncome)
                </div>
                <div class="fieldStyle col-xs-12 col-sm-8">
                    <div class="topTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientOneGrossSelfEmploymentIncome, new { htmlAttributes = new { @class = "form-control clientOne" } })
                        @Html.ValidationMessageFor(model => model.ClientOneGrossSelfEmploymentIncome, "", new {@class = "text-danger"})
                    </div>
                    <div class="bottomTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientTwoGrossSelfEmploymentIncome, new { htmlAttributes = new { @class = "form-control clientTwo" } })
                        @Html.ValidationMessageFor(model => model.ClientTwoGrossSelfEmploymentIncome, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="hboDetailRow row">
            <div class="col-xs-12">
                <div class="headerStyle col-xs-12 col-sm-4">
                    @Html.LabelFor(model => model.ClientOneGrossPrivatePensionIncome)
                </div>
                <div class="fieldStyle col-xs-12 col-sm-8">
                    <div class="topTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientOneGrossPrivatePensionIncome, new { htmlAttributes = new { @class = "form-control clientOne" } })
                        @Html.ValidationMessageFor(model => model.ClientOneGrossPrivatePensionIncome, "", new {@class = "text-danger"})
                    </div>
                    <div class="bottomTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientTwoGrossPrivatePensionIncome, new { htmlAttributes = new { @class = "form-control clientTwo" } })
                        @Html.ValidationMessageFor(model => model.ClientTwoGrossPrivatePensionIncome, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="hboDetailRow row">
            <div class="col-xs-12">
                <div class="headerStyle col-xs-12 col-sm-4">
                    @Html.LabelFor(model => model.ClientOneGrossStatePension)
                </div>
                <div class="fieldStyle col-xs-12 col-sm-8">
                    <div class="topTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientOneGrossStatePension, new { htmlAttributes = new { @class = "form-control clientOne" } })
                        @Html.ValidationMessageFor(model => model.ClientOneGrossStatePension, "", new {@class = "text-danger"})
                    </div>
                    <div class="bottomTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientTwoGrossStatePension, new { htmlAttributes = new { @class = "form-control clientTwo" } })
                        @Html.ValidationMessageFor(model => model.ClientTwoGrossStatePension, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="hboDetailRow row">
            <div class="col-xs-12">
                <div class="headerStyle col-xs-12 col-sm-4">
                    @Html.LabelFor(model => model.ClientOneAdditionalIncome)
                </div>
                <div class="fieldStyle col-xs-12 col-sm-8">
                    <div class="topTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientOneAdditionalIncome, new { htmlAttributes = new { @class = "form-control clientOne" } })
                        @Html.ValidationMessageFor(model => model.ClientOneAdditionalIncome, "", new {@class = "text-danger"})
                    </div>
                    <div class="bottomTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientTwoAdditionalIncome, new { htmlAttributes = new { @class = "form-control clientTwo" } })
                        @Html.ValidationMessageFor(model => model.ClientTwoAdditionalIncome, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="hboDetailRow row">
            <div class="col-xs-12">
                <div class="headerStyle col-xs-12 col-sm-4">
                    @Html.LabelFor(model => model.ClientOneTotalAnnualIncome)
                </div>
                <div class="fieldStyle col-xs-12 col-sm-8">
                    <div class="topTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientOneTotalAnnualIncome, new { htmlAttributes = new { @class = "form-control clientOneTotalAnnualIncome" } })
                        @Html.ValidationMessageFor(model => model.ClientOneTotalAnnualIncome, "", new {@class = "text-danger"})
                    </div>
                    <div class="bottomTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientTwoTotalAnnualIncome, new { htmlAttributes = new { @class = "form-control clientTwoTotalAnnualIncome" } })
                        @Html.ValidationMessageFor(model => model.ClientTwoTotalAnnualIncome, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="hboDetailRow row">
            <div class="col-xs-12">
                <div class="headerStyle col-xs-12 col-sm-4">
                    @Html.LabelFor(model => model.ClientOneTotalGrossMonthlyIncome)
                </div>
                <div class="fieldStyle col-xs-12 col-sm-8">
                    <div class="topTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientOneTotalGrossMonthlyIncome, new { htmlAttributes = new { @class = "form-control clientOneTotalMonthlyIncome" } })
                        @Html.ValidationMessageFor(model => model.ClientOneTotalGrossMonthlyIncome, "", new {@class = "text-danger"})
                    </div>
                    <div class="bottomTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientTwoTotalGrossMonthlyIncome, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.ClientTwoTotalGrossMonthlyIncome, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="hboDetailRow row">
            <div class="col-xs-12">
                <div class="headerStyle col-xs-12 col-sm-4">
                    @Html.LabelFor(model => model.ClientOneTotalNetMonthlyIncome)
                </div>
                <div class="fieldStyle col-xs-12 col-sm-8">
                    <div class="topTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientOneTotalNetMonthlyIncome, new { htmlAttributes = new { @class = "form-control " } })
                        @Html.ValidationMessageFor(model => model.ClientOneTotalNetMonthlyIncome, "", new {@class = "text-danger"})
                    </div>
                    <div class="bottomTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientTwoTotalNetMonthlyIncome, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.ClientTwoTotalNetMonthlyIncome, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script type="text/javascript">
        $(document).ready(function() {
            var updateClientOneMontlyTotal = function() {
                calculateMonthlyTotalFromAnnual('.clientOneTotalAnnualIncome', '.clientOneTotalMonthlyIncome');
            }
            var updateClientTwoMontlyTotal = function() {
                calculateMonthlyTotalFromAnnual('.clientTwoTotalAnnualIncome', '.clientTwoTotalMonthlyIncome');
            }
            updateTotalInputFields('.clientOne', '.clientOneTotalAnnualIncome', updateClientOneMontlyTotal);
            updateTotalInputFields('.clientTwo', '.clientTwoTotalAnnualIncome', updateClientTwoMontlyTotal);
        });
    </script>
        <div class="form-group">
            <div class="hboDetailRow row">

            </div>
        </div>
    <div class="form-group">
        <div class="hboDetailRow row">
            <div class="col-xs-12">
                <div class="headerStyle col-xs-12 col-sm-4">
                    @Html.LabelFor(model => model.ClientOneTaxRate)
                </div>
                <div class="fieldStyle col-xs-12 col-sm-8">
                    <div class="topTFStyle col-xs-12 col-sm-6">
                        @Html.EnumDropDownListFor(model => model.ClientOneTaxRate, new {@class = "form-control"})
                        @Html.ValidationMessageFor(model => model.ClientOneTaxRate, "", new {@class = "text-danger"})
                    </div>
                    <div class="bottomTFStyle col-xs-12 col-sm-6">
                        @Html.EnumDropDownListFor(model => model.ClientTwoTaxRate, new {@class = "form-control"})
                        @Html.ValidationMessageFor(model => model.ClientTwoTaxRate, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="hboDetailRow row">
            <div class="col-xs-12">
                <div class="headerStyle col-xs-12 col-sm-4">
                    @Html.LabelFor(model => model.ClientOneAnyChangesToIncome)
                </div>
                <div class="fieldStyle col-xs-12 col-sm-8">
                    <div class="topTFStyle col-xs-12 col-sm-6">
                        <div class="checkbox">
                            @Html.RadioButtonFor(model => model.ClientOneAnyChangesToIncome, true) Yes
                            @Html.RadioButtonFor(model => model.ClientOneAnyChangesToIncome, false) No
                            @Html.ValidationMessageFor(model => model.ClientOneAnyChangesToIncome, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    <div class="bottomTFStyle col-xs-12 col-sm-6">
                        <div class="checkbox">
                            @Html.RadioButtonFor(model => model.ClientTwoAnyChangesToIncome, true) Yes
                            @Html.RadioButtonFor(model => model.ClientTwoAnyChangesToIncome, false) No
                            @Html.ValidationMessageFor(model => model.ClientTwoAnyChangesToIncome, "", new {@class = "text-danger"})
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="hboDetailRow row">
            <div class="col-xs-12">
                <div class="headerStyle col-xs-12 col-sm-4">
                    @Html.LabelFor(model => model.ClientOneAnyChangesToTax)
                </div>
                <div class="fieldStyle col-xs-12 col-sm-8">
                    <div class="topTFStyle col-xs-12 col-sm-6">
                        <div class="checkbox">
                            @Html.RadioButtonFor(model => model.ClientOneAnyChangesToTax, true) Yes
                            @Html.RadioButtonFor(model => model.ClientOneAnyChangesToTax, false) No
                            @Html.ValidationMessageFor(model => model.ClientOneAnyChangesToTax, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    <div class="bottomTFStyle col-xs-12 col-sm-6">
                        <div class="checkbox">
                            @Html.RadioButtonFor(model => model.ClientTwoAnyChangesToTax, true) Yes
                            @Html.RadioButtonFor(model => model.ClientTwoAnyChangesToTax, false) No
                            @Html.ValidationMessageFor(model => model.ClientTwoAnyChangesToTax, "", new {@class = "text-danger"})
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
        <div class="form-group">
            <div class="hboDetailRow row">

            </div>
        </div>

    <div class="form-group">
        <div class="hboDetailRowNoBorder row">
            <div class="col-xs-12">
                <div class="headerStyle col-xs-12 col-sm-4">
                    @Html.LabelFor(model => model.IncomeNotes)
                </div>
                <div class="fieldStyle col-xs-12 col-sm-8">
                    <div class="topTFStyle col-xs-12">
                        @Html.EditorFor(model => model.IncomeNotes, new {htmlAttributes = new {@class = "form-control", placeholder = "Please provide details. For self-employed income please provide details for the last 3 years"}})
                        @Html.ValidationMessageFor(model => model.IncomeNotes, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="buttonPanel col-xs-12">
            <input type="submit" value="Save" class="btn btn-default"/>
        </div>
    </div>
    </div>
}

<div class="factFindEditReturnButton">
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}