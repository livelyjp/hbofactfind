@using HboFactFind.Domain.Questions
@model HboFactFind.Domain.Pages.PageSeven

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
    <h4>Assests & Liabilities</h4>

    <div class="hboDetailRowNoBorder row">
        <h4>Summary Of Assets</h4>
    </div>

    @Html.ValidationSummary(true, "", new {@class = "text-danger"})
    @Html.HiddenFor(model => model.Id)
        <div class="hboDetailRow row">
            <div class="col-xs-12">
                <div class="headerStyle col-xs-12 col-sm-4">
                </div>
                <div class="columnTitle col-xs-12 col-sm-8">
                    <div class="col-xs-12 col-sm-6">
                        <strong>Client One</strong>
                    </div>
                    <div class="col-xs-12 col-sm-6">
                        <strong>Client Two</strong>
                    </div>
                </div>
            </div>
        </div>
    <div class="form-group">
        <div class="hboDetailRow row">
            <div class="col-xs-12">
                <div class="headerStyle col-xs-12 col-sm-4">
                    @Html.LabelFor(model => model.ClientOneHome)
                </div>
                <div class="fieldStyle col-xs-12 col-sm-8">
                    <div class="topTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientOneHome, new { htmlAttributes = new { @class = "form-control clientOne" } })
                        @Html.ValidationMessageFor(model => model.ClientOneHome, "", new {@class = "text-danger"})
                    </div>
                    <div class="bottomTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientTwoHome, new { htmlAttributes = new { @class = "form-control clientTwo" } })
                        @Html.ValidationMessageFor(model => model.ClientTwoHome, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="hboDetailRow row">
            <div class="col-xs-12">
                <div class="headerStyle col-xs-12 col-sm-4">
                    @Html.LabelFor(model => model.ClientOneOtherProperty)
                </div>
                <div class="fieldStyle col-xs-12 col-sm-8">
                    <div class="topTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientOneOtherProperty, new { htmlAttributes = new { @class = "form-control clientOne" } })
                        @Html.ValidationMessageFor(model => model.ClientOneOtherProperty, "", new {@class = "text-danger"})
                    </div>
                    <div class="bottomTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientTwoOtherProperty, new { htmlAttributes = new { @class = "form-control clientTwo" } })
                        @Html.ValidationMessageFor(model => model.ClientTwoOtherProperty, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="hboDetailRow row">
            <div class="col-xs-12">
                <div class="headerStyle col-xs-12 col-sm-4">
                    @Html.LabelFor(model => model.ClientOneCashDeposits)
                </div>
                <div class="fieldStyle col-xs-12 col-sm-8">
                    <div class="topTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientOneCashDeposits, new { htmlAttributes = new { @class = "form-control clientOne" } })
                        @Html.ValidationMessageFor(model => model.ClientOneCashDeposits, "", new {@class = "text-danger"})
                    </div>
                    <div class="bottomTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientTwoCashDeposits, new { htmlAttributes = new { @class = "form-control clientTwo" } })
                        @Html.ValidationMessageFor(model => model.ClientTwoCashDeposits, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="hboDetailRow row">
            <div class="col-xs-12">
                <div class="headerStyle col-xs-12 col-sm-4">
                    @Html.LabelFor(model => model.ClientOneInvestmentBonds)
                </div>
                <div class="fieldStyle col-xs-12 col-sm-8">
                    <div class="topTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientOneInvestmentBonds, new { htmlAttributes = new { @class = "form-control clientOne" } })
                        @Html.ValidationMessageFor(model => model.ClientOneInvestmentBonds, "", new {@class = "text-danger"})
                    </div>
                    <div class="bottomTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientTwoInvestmentBonds, new { htmlAttributes = new { @class = "form-control clientTwo" } })
                        @Html.ValidationMessageFor(model => model.ClientTwoInvestmentBonds, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="hboDetailRow row">
            <div class="col-xs-12">
                <div class="headerStyle col-xs-12 col-sm-4">
                    @Html.LabelFor(model => model.ClientOnePensionFunds)
                </div>
                <div class="fieldStyle col-xs-12 col-sm-8">
                    <div class="topTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientOnePensionFunds, new { htmlAttributes = new { @class = "form-control clientOne" } })
                        @Html.ValidationMessageFor(model => model.ClientOnePensionFunds, "", new {@class = "text-danger"})
                    </div>
                    <div class="bottomTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientTwoPensionFunds, new { htmlAttributes = new { @class = "form-control clientTwo" } })
                        @Html.ValidationMessageFor(model => model.ClientTwoPensionFunds, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="hboDetailRow row">
            <div class="col-xs-12">
                <div class="headerStyle col-xs-12 col-sm-4">
                    @Html.LabelFor(model => model.ClientOneIsa)
                </div>
                <div class="fieldStyle col-xs-12 col-sm-8">
                    <div class="topTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientOneIsa, new { htmlAttributes = new { @class = "form-control clientOne clientTwo" } })
                        @Html.ValidationMessageFor(model => model.ClientOneIsa, "", new {@class = "text-danger"})
                    </div>
                    <div class="bottomTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientTwoIsa, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.ClientTwoIsa, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="hboDetailRow row">
            <div class="col-xs-12">
                <div class="headerStyle col-xs-12 col-sm-4">
                    @Html.LabelFor(model => model.ClientOneCollectives)
                </div>
                <div class="fieldStyle col-xs-12 col-sm-8">
                    <div class="topTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientOneCollectives, new { htmlAttributes = new { @class = "form-control clientOne" } })
                        @Html.ValidationMessageFor(model => model.ClientOneCollectives, "", new {@class = "text-danger"})
                    </div>
                    <div class="bottomTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientTwoCollectives, new { htmlAttributes = new { @class = "form-control clientTwo" } })
                        @Html.ValidationMessageFor(model => model.ClientTwoCollectives, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="hboDetailRow row">
            <div class="col-xs-12">
                <div class="headerStyle col-xs-12 col-sm-4">
                    @Html.LabelFor(model => model.ClientOneShares)
                </div>
                <div class="fieldStyle col-xs-12 col-sm-8">
                    <div class="topTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientOneShares, new { htmlAttributes = new { @class = "form-control clientOne" } })
                        @Html.ValidationMessageFor(model => model.ClientOneShares, "", new {@class = "text-danger"})
                    </div>
                    <div class="bottomTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientTwoShares, new { htmlAttributes = new { @class = "form-control clientTwo" } })
                        @Html.ValidationMessageFor(model => model.ClientTwoShares, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="hboDetailRow row">
            <div class="col-xs-12">
                <div class="headerStyle col-xs-12 col-sm-4">
                    @Html.LabelFor(model => model.ClientOneBuisnessAssets)
                </div>
                <div class="fieldStyle col-xs-12 col-sm-8">
                    <div class="topTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientOneBuisnessAssets, new { htmlAttributes = new { @class = "form-control clientOne" } })
                        @Html.ValidationMessageFor(model => model.ClientOneBuisnessAssets, "", new {@class = "text-danger"})
                    </div>
                    <div class="bottomTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientTwoBuisnessAssets, new { htmlAttributes = new { @class = "form-control clientTwo" } })
                        @Html.ValidationMessageFor(model => model.ClientTwoBuisnessAssets, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="hboDetailRow row">
            <div class="col-xs-12">
                <div class="headerStyle col-xs-12 col-sm-4">
                    @Html.LabelFor(model => model.ClientOneOtherAssets)
                </div>
                <div class="fieldStyle col-xs-12 col-sm-8">
                    <div class="topTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientOneOtherAssets, new { htmlAttributes = new { @class = "form-control clientOne" } })
                        @Html.ValidationMessageFor(model => model.ClientOneOtherAssets, "", new {@class = "text-danger"})
                    </div>
                    <div class="bottomTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientTwoOtherAssets, new { htmlAttributes = new { @class = "form-control clientTwo" } })
                        @Html.ValidationMessageFor(model => model.ClientTwoOtherAssets, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        </div>
    </div>
        <div class="hboDetailRow row">

        </div>
    <div class="form-group">
        <div class="hboDetailRowNoBorder row">
            <div class="col-xs-12">
                <div class="headerStyle col-xs-12 col-sm-4">
                    @Html.LabelFor(model => model.ClientOneTotalAssets)
                </div>
                <div class="fieldStyle col-xs-12 col-sm-8">
                    <div class="topTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientOneTotalAssets, new { htmlAttributes = new { @class = "form-control clientOneTotalAssets" } })
                        @Html.ValidationMessageFor(model => model.ClientOneTotalAssets, "", new {@class = "text-danger"})
                    </div>
                    <div class="bottomTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientTwoTotalAssets, new { htmlAttributes = new { @class = "form-control clientTwoTotalAssets" } })
                        @Html.ValidationMessageFor(model => model.ClientTwoTotalAssets, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        </div>
    </div>
        <script type="text/javascript">
    $(document).ready(function () {
        updateTotalInputFields('.clientOne', '.clientOneTotalAssets', function () { });
        updateTotalInputFields('.clientTwo', '.clientTwoTotalAssets', function () { });
    });
        </script>

    <div class="hboDetailRowNoBorder row">
        <h4>Summary Of Liabilities</h4>
    </div>
        <div class="hboDetailRow row">
            <div class="col-xs-12">
                <div class="headerStyle col-xs-12 col-sm-4">
                </div>
                <div class="columnTitle col-xs-12 col-sm-8">
                    <div class="col-xs-12 col-sm-6">
                        <strong>Client One</strong>
                    </div>
                    <div class="col-xs-12 col-sm-6">
                        <strong>Client Two</strong>
                    </div>
                </div>
            </div>
        </div>
    <div class="form-group">
        <div class="hboDetailRow row">
            <div class="col-xs-12">
                <div class="headerStyle col-xs-12 col-sm-4">
                    @Html.LabelFor(model => model.ClientOneMainMortgage)
                </div>
                <div class="fieldStyle col-xs-12 col-sm-8">
                    <div class="topTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientOneMainMortgage, new { htmlAttributes = new { @class = "form-control clientOneDebt" } })
                        @Html.ValidationMessageFor(model => model.ClientOneMainMortgage, "", new {@class = "text-danger"})
                    </div>
                    <div class="bottomTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientTwoMainMortgage, new { htmlAttributes = new { @class = "form-control clientTwoDebt" } })
                        @Html.ValidationMessageFor(model => model.ClientTwoMainMortgage, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="hboDetailRow row">
            <div class="col-xs-12">
                <div class="headerStyle col-xs-12 col-sm-4">
                    @Html.LabelFor(model => model.ClientOneCreditCards)
                </div>
                <div class="fieldStyle col-xs-12 col-sm-8">
                    <div class="topTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientOneCreditCards, new { htmlAttributes = new { @class = "form-control clientOneDebt" } })
                        @Html.ValidationMessageFor(model => model.ClientOneCreditCards, "", new {@class = "text-danger"})
                    </div>
                    <div class="bottomTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientTwoCreditCards, new {htmlAttributes = new {@class = "form-control clientTwoDebt"}})
                        @Html.ValidationMessageFor(model => model.ClientTwoCreditCards, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="hboDetailRow row">
            <div class="col-xs-12">
                <div class="headerStyle col-xs-12 col-sm-4">
                    @Html.LabelFor(model => model.ClientOneOverdraft)
                </div>
                <div class="fieldStyle col-xs-12 col-sm-8">
                    <div class="topTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientOneOverdraft, new { htmlAttributes = new { @class = "form-control clientOneDebt" } })
                        @Html.ValidationMessageFor(model => model.ClientOneOverdraft, "", new {@class = "text-danger"})
                    </div>
                    <div class="bottomTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientTwoOverdraft, new { htmlAttributes = new { @class = "form-control clientTwoDebt" } })
                        @Html.ValidationMessageFor(model => model.ClientTwoOverdraft, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="hboDetailRow row">
            <div class="col-xs-12">
                <div class="headerStyle col-xs-12 col-sm-4">
                    @Html.LabelFor(model => model.ClientOneLoansHp)
                </div>
                <div class="fieldStyle col-xs-12 col-sm-8">
                    <div class="topTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientOneLoansHp, new { htmlAttributes = new { @class = "form-control clientOneDebt" } })
                        @Html.ValidationMessageFor(model => model.ClientOneLoansHp, "", new {@class = "text-danger"})
                    </div>
                    <div class="bottomTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientTwoLoansHp, new { htmlAttributes = new { @class = "form-control clientTwoDebt" } })
                        @Html.ValidationMessageFor(model => model.ClientTwoLoansHp, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="hboDetailRow row">
            <div class="col-xs-12">
                <div class="headerStyle col-xs-12 col-sm-4">
                    @Html.LabelFor(model => model.ClientOneOtherMortgage)
                </div>
                <div class="fieldStyle col-xs-12 col-sm-8">
                    <div class="topTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientOneOtherMortgage, new { htmlAttributes = new { @class = "form-control clientOneDebt" } })
                        @Html.ValidationMessageFor(model => model.ClientOneOtherMortgage, "", new {@class = "text-danger"})
                    </div>
                    <div class="bottomTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientTwoOtherMortgage, new { htmlAttributes = new { @class = "form-control clientTwoDebt" } })
                        @Html.ValidationMessageFor(model => model.ClientTwoOtherMortgage, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="hboDetailRow row">
            <div class="col-xs-12">
                <div class="headerStyle col-xs-12 col-sm-4">
                    @Html.LabelFor(model => model.ClientOneOtherLending)
                </div>
                <div class="fieldStyle col-xs-12 col-sm-8">
                    <div class="topTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientOneOtherLending, new { htmlAttributes = new { @class = "form-control clientOneDebt" } })
                        @Html.ValidationMessageFor(model => model.ClientOneOtherLending, "", new {@class = "text-danger"})
                    </div>
                    <div class="bottomTFStyle col-xs-12 col-sm-6">
                        @Html.EditorFor(model => model.ClientTwoOtherLending, new { htmlAttributes = new { @class = "form-control clientTwoDebt" } })
                        @Html.ValidationMessageFor(model => model.ClientTwoOtherLending, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="hboDetailRow row"></div>
            <div class="form-group">
                <div class="hboDetailRow row">
                    <div class="col-xs-12">
                        <div class="headerStyle col-xs-12 col-sm-4">
                            @Html.LabelFor(model => model.ClientOneTotalDebt)
                        </div>
                        <div class="fieldStyle col-xs-12 col-sm-8">
                            <div class="topTFStyle col-xs-12 col-sm-6">
                                @Html.EditorFor(model => model.ClientOneTotalDebt, new { htmlAttributes = new { @class = "form-control clientOneTotalDebt" } })
                                @Html.ValidationMessageFor(model => model.ClientOneTotalDebt, "", new {@class = "text-danger"})
                            </div>
                            <div class="bottomTFStyle col-xs-12 col-sm-6">
                                @Html.EditorFor(model => model.ClientTwoTotalDebt, new { htmlAttributes = new { @class = "form-control clientTwoTotalDebt" } })
                                @Html.ValidationMessageFor(model => model.ClientTwoTotalDebt, "", new {@class = "text-danger"})
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        <script type="text/javascript">
    $(document).ready(function () {
        updateTotalInputFields('.clientOneDebt', '.clientOneTotalDebt', function () { });
        updateTotalInputFields('.clientTwoDebt', '.clientTwoTotalDebt', function () { });
    });
        </script>

    <div class="hboDetailRowNoBorder row">
                <h4>Breakdown of Liabilities</h4>
                <div class="col-xs-12">
                    @Html.Partial("~/Views/BreakDownOfLiabilities/Partials/_BreakDownOfLiabilitiesIndexEdit.cshtml", Model.BreakDownOfLiabilitieses)
                </div>
            </div>


            <div class="form-group">
                <div class="hboDetailRow row">
                    <div class="col-xs-12">
                        <div class="headerStyle col-xs-12 col-sm-4">
                            @Html.LabelFor(model => model.AssetsNotes)
                        </div>
                        <div class="fieldStyle col-xs-12 col-sm-8">
                            <div class="topTFStyle col-xs-12">
                                @Html.EditorFor(model => model.AssetsNotes, new {htmlAttributes = new {@class = "form-control", placeholder="*Please provide details of other lending or other relevant information"}})
                                @Html.ValidationMessageFor(model => model.AssetsNotes, "", new {@class = "text-danger"})
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="buttonPanel col-xs-12">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
}

@Html.Partial("~/Views/BreakDownOfLiabilities/Partials/_BreakDownOfLiabilitiesCreate.cshtml", new BreakDownOfLiabilities { PageSevenId = Model.Id })
@Html.Partial("~/Views/BreakDownOfLiabilities/Partials/_BreakDownOfLiabilitiesEdit.cshtml", new BreakDownOfLiabilities())
@Html.Partial("~/Views/BreakDownOfLiabilities/Partials/_BreakDownOfLiabilitiesDelete.cshtml", new BreakDownOfLiabilities())

<script type="text/javascript">

    $(document).ready(function () {
        $("#createBreakdownDialog").hide();
        $("#editBreakdownDialog").hide();
        $("#deleteBreakdownDialog").hide();

        $(window).resize(function () {
            $("#dialog").dialog("option", "position", "center");
        });
    });

</script>


<div class="factFindEditReturnButton">
    @Html.ActionLink("Back to List", "Index", "FactFind")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}